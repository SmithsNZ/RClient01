# Put in a placeholder for an output file
# outFile = outFile2,
# Specify any variables to keep or drop
varsToDrop = c("year"),
# Specify rows to select
rowSelection = creditScore < 850,
# Specify a list of new variables to create
transforms = list(
catDebt = cut(ccDebt, breaks = c(0, 6500, 13000),
labels = c("Low Debt", "High Debt")),
lowScore = creditScore < 625))
rxGetInfo(mortDataNew)
rxGetInfo(mortDataNew, getVarInfo = TRUE, numRows=3)
rxGetInfo(mortDataNew, getVarInfo = TRUE, numRows=3)
?rxGetInfo
rxHistogram(~creditScore, data = mortDataNew )
mortCube <- rxCube(~F(creditScore):catDebt, data = mortDataNew)
rxLinePlot(Counts~creditScore|catDebt, data=rxResultsDF(mortCube))
myLogit <- rxLogit(default~ccDebt+yearsEmploy , data=mortDataNew)
summary(myLogit)
mortDataNew <- rxDataStep(
# Specify the input data set
inData = mortData,
# Put in a placeholder for an output file
outFile = NULL,
# Specify any variables to keep or drop
varsToDrop = c("year"),
# Specify rows to select
rowSelection = creditScore < 850,
# Specify a list of new variables to create
transforms = list(
catDebt = cut(ccDebt, breaks = c(0, 6500, 13000),
labels = c("Low Debt", "High Debt")),
lowScore = creditScore < 625))
bigDataDir <- "C:\Data\MortData" # Specify the location
bigDataDir <- "C:\\Data\\MortData"
bigDataDir
bigDataDir <- "C:\Data\MortData
bigDataDir <- "C:\Data\MortData"
?Quotes
bigDataDir <- "C:\\Data\\MortData"
bigDataDir
.Platform$file.sep
list.files(bigDataDir)
bigDataDir <- "C:\Data\MortData"
bigDataDir <- "C:\MRS\BigData"
bigDataDir <- "C:\\Data\\MortData"
list.files(bigDataDir)
?mortDefaultSmall
bigDataDir <- "C:/Data/MortData"
list.files(bigDataDir)
bigDataDir
file.path("C:"", "Data", "MortData")
file.path("C:", "Data", "MortData")
bigDataDir <- file.path("C:", "Data", "MortData")
bigDataDir
list.files(bigDataDir)
getpwd()
getwd()
dataIn = file.path(bigDataDir, "mortDefault2000.csv")
dataIn
rm(bigDataDir)
dataDir <- file.path("C:", "Data", "MortData")
list.files(dataDir)
dataIn = file.path(dataDir, "mortDefault2000.csv")
dataIn
rm(dataIn)
dataFileIn = file.path(dataDir, "mortDefault2000.csv")
dataFileIn
inFileName = file.path(dataDir, "mortDefault2000.csv")
inFileName
mortCsvFileName = file.path(dataDir, "mortDefault2000.csv")
mortXdfFileName = file.path(dataDir, "mortDefault.xdf")
mortCsvFileName = file.path(dataDir, "mortDefault")
append <- "none"
for (i in 2000:2009)
{
importFile <- paste(mortCsvFileName, i, ".csv", sep="")
#mortDS <- rxImport(importFile, mortXdfFileName, append=append)
#append <- "rows"
}
importFile
mortCsvFileName = file.path(dataDir, "mortDefault") # start of data file name
mortXdfFileName = file.path(dataDir, "mortDefault.xdf")
list.files(dataDir)
append <- "none"
for (i in 2000:2009)
{
importFile <- paste(mortCsvFileName, i, ".csv", sep="") # "C:/Data/MortData/mortDefault2009.csv"
mortDS <- rxImport(importFile, mortXdfFileName, append=append)
append <- "rows"
}
rxGetInfo(mortDS, numRows=5
rxGetInfo(mortDS, numRows=5)
rxGetInfo(mortDS, numRows=5)
rxSummary(~., data = mortDS, blocksPerRead = 2) # (blocksPerRead ignored on local client)
days = [["ran", "was tired"], ["ran", "was not tired"], ["didn't run", "was tired"], ["ran", "was tired"], ["didn't run", "was not tired"], ["ran", "was not tired"], ["ran", "was tired"]]
?dplyrXdf
??dplyrXdf
pwd()
getwd()fnames=list.files("aclImdb", pattern = "[[:digit:]_]+.txt", recursive = TRUE, full.names = TRUE)
getwd()
dataDir <- "C:\Bob\Data\acllmdb\aclImdb\train\pos"
dataDir <- "C:\\Bob\Data\\acllmdb\\aclImdb\\train\\pos"
dataDir <- "C:/\Bob\Data/\acllmdb\\aclImdb\\train\\pos"
dataDir <- "C:\\Bob\Data\\acllmdb\\aclImdb\\train\\pos"
dataDir <- "C:\\Bob\\Data\\acllmdb\\aclImdb\\train\\pos"
dataDir <- "C:\\Bob\\Data\\acllmdb\\aclImdb\\train\\pos"
list.files(dataDir)
list.files(dataInDir, pattern = "[[:digit:]_]+.txt", recursive = TRUE, full.names = TRUE)
dataInDir <- "C:\\Bob\\Data\\acllmdb\\aclImdb\\train\\pos"
list.files(dataInDir, pattern = "[[:digit:]_]+.txt", recursive = TRUE, full.names = TRUE)
list.files(dataInDir, pattern = "[[:digit:]_]+.txt", recursive = TRUE, full.names = FALSE)
list.files(dataInDir)
list.files(dataInDir, pattern = "[[:digit:]_]+.txt", recursive = TRUE, full.names = FALSE, ignore,case= TRUE)
list.files(dataInDir, pattern = "[[:digit:]_]+.txt", recursive = TRUE, full.names = FALSE, ignore.case= TRUE)
list.files(dataInDir, pattern = "[[:digit:]_]+.txt", recursive = TRUE, full.names = FALSE, ignore.case= TRUE)
grep
grep
list.files(dataInDir)
PathNameIn <- "C:\\Bob\\Data\\acllmdb\\aclImdb\\train\\pos"
list.files(PathNameIn) #, pattern = "[[:digit:]_]+.txt", recursive = TRUE, full.names = FALSE, ignore.case= TRUE)
PathNameIn <- "C:\\Bob\\Data\\acllmdb\\aclImdb\\train\\pos"
FileList = list.files(PathNameIn) #, pattern = "[[:digit:]_]+.txt", recursive = TRUE, full.names = FALSE, ignore.case= TRUE)
grep(".txt", FileList, value="TRUE")
PathNameIn <- "C:\\Bob\\Data\\acllmdb\\aclImdb\\train\\pos"
FileList = list.files(PathNameIn) #, pattern = "[[:digit:]_]+.txt", recursive = TRUE, full.names = FALSE, ignore.case= TRUE)
grep(".txt", FileList, value="FALSE")
datapath <- "C:\\Bob\\Data\\acllmdb\\aclImdb\\train\\pos"
fnames = list.files(datapath) #, pattern = "[[:digit:]_]+.txt", recursive = TRUE, full.names = FALSE, ignore.case= TRUE)
grep(".txt", fnames, value="FALSE")
datapath <- "C:\\Bob\\Data\\acllmdb\\aclImdb\\train\\pos"
fnames = list.files(datapath) #, pattern = "[[:digit:]_]+.txt", recursive = TRUE, full.names = FALSE, ignore.case= TRUE)
grep(".txt", fnames, value="TRUE")
datapath <- "C:\\Bob\\Data\\acllmdb\\aclImdb\\train\\pos"
fnames = list.files(datapath) #, pattern = "[[:digit:]_]+.txt", recursive = TRUE, full.names = FALSE, ignore.case= TRUE)
length(grep(".txt", fnames, value="TRUE"))
datapath <- "C:\\Bob\\Data\\acllmdb\\aclImdb\\train\\pos"
fnames = list.files(datapath) #, pattern = "[[:digit:]_]+.txt", recursive = TRUE, full.names = FALSE, ignore.case= TRUE)
length(grep(".txt", fnames, value="TRUE"))
grep(".csv", fnames, value="TRUE")
print ("hello")
datapath <- "C:\\Bob\\Data\\acllmdb\\aclImdb\\train\\pos"
fnames <- list.files(datapath) #, pattern = "[[:digit:]_]+.txt", recursive = TRUE, full.names = FALSE, ignore.case= TRUE)
fnames <- grep(".txt", fnames, value="TRUE")
length(grep(".txt", fnames, value="TRUE"))
print(sprintf("Files found: %d", length(fnames)))
fnames
print(sprintf("Files found: %d", length(fnames)))
message(sprintf("Files found: %d", length(fname
message(sprintf("Files found: %d", length(fnames)))
grep(".csv", fnames, value="TRUE")
message(sprintf("Files found: %d", length(fnames)))
datapath <- "C:\\Bob\\Data\\acllmdb\\aclImdb\\train\\pos"
fnames <- list.files(datapath)
fnames <- grep(".txt", fnames, value="TRUE")
fnames <- sample(fnames)
message(sprintf("Files found: %d", length(fnames)))
datapath <- "C:\\Bob\\Data\\acllmdb\\aclImdb\\train\\pos"
fnames <- list.files(datapath)
fnames <- grep(".txt", fnames, value="TRUE")
fnames <- sample(fnames)
message(sprintf("Files found: %d", length(fnames)))
datapath <- "C:\\Bob\\Data\\acllmdb\\aclImdb\\train\\pos"
fnames <- list.files(datapath)
fnames <- grep(".txt", fnames, value="TRUE")
fnames <- sample(fnames, 100)
message(sprintf("Files found: %d", length(fnames)))
datapath <- "C:\\Bob\\Data\\acllmdb\\aclImdb\\train\\pos"
fnames <- list.files(datapath)
fnames <- grep(".txt", fnames, value="TRUE")
fnames <- sample(fnames, 100)
message(sprintf("Files found: %d", length(fnames)))
fnames
datapath <- "C:\\Bob\\Data\\acllmdb\\aclImdb\\train\\pos"
fnames <- list.files(datapath)
fnames <- grep(".txt", fnames, value="TRUE")
fnames <- sample(fnames, 100)
message(sprintf("Files found: %d", length(fnames)))
fnames
datapath <- "C:\\Bob\\Data\\acllmdb\\aclImdb\\train\\pos"
fnames <- list.files(datapath)
fnames <- grep(".txt", fnames, value="TRUE")
fnames <- sample(fnames, 100)
message(sprintf("Files found: %d", length(fnames)))
fnames
fnames
options()
unlist (
options())
l.ex <- list(a = list(1:5, LETTERS[1:5]), b = "Z", c = NA)
l.ex
unlist(l.ex, recursive = FALSE)
l1 <- list(a = "a", b = 2, c = pi+2i)
l1 <- list(a = "a", b = 2, c = pi+2i)
l1 <- list(a = "a", b = 2, c = pi+2i)
l1
unlist(l1)
l1 = list(, "B", 12)
l1 = list(5, "B", 12)
l1
unlist(l1)
strsplit(fnames,"[.]")
strsplit(fnames,".")
strsplit(fnames,"[.]")
scores <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
scores <- strsplit(scores,"_")
scores <- strsplit(scores[1],"_")
strsplit(scores[1],"_")
fnames <- strsplit(fnames,"[.]")[1]
fnames
fnames <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
fnames <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
fnames <- sample(fnames, 100)
message(sprintf("Files found: %d", length(fnames)))
fnames <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
fnames <- sample(fnames, 100)
fnames <- list.files(datapath)
fnames <- grep(".txt", fnames, value="TRUE")
fnames <- grep(".txt", fnames, value="TRUE")
fnames
fnames <- strsplit(fnames,"[.]")
fnames
fnames[1]
fnames
datapath <- "C:\\Bob\\Data\\acllmdb\\aclImdb\\train\\pos"
fnames <- list.files(datapath)
fnames <- grep(".txt", fnames, value="TRUE")
# Sample
fnames <- sample(fnames, 100)
message(sprintf("Files found: %d", length(fnames)))
fnames <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
fnames <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
fnames
fnames
unlist
unlist(fnames)
fnames
type(fnames)
class(fnames)
fnames
fnames[1]
class(fnames[1])
fnames[, 1]
fnames[1]
fnames[1][1]
fnames[1:1]
fnames[[1]]
fnames[[1]][[1]]
class(fnames[1])
class(fnames[1][1])
class(fnames[1][1])
fnames[[1]][[1]]
l1[1]
l1 <- list("one", "two", "three")
l1[1]
class l[1]
class li[1]
class l1[1]
test <- list("one", "two", "three")
test[1]
class test[1]
test <- list("one", "two", "three")
test[1]
class (test[1])
test[1]; class (test[1])
test <- list("one", "two", "three"); test[1]; class (test[1]); test[[1]]; class(test[[1]])
test <- list("one", "two", "three"); test[1]; class(test[1]); test[[1]]; class(test[[1]])
fnames <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
datapath <- "C:\\Bob\\Data\\acllmdb\\aclImdb\\train\\pos"
fnames <- list.files(datapath)
fnames <- grep(".txt", fnames, value="TRUE")
# Sample
fnames <- sample(fnames, 100)
message(sprintf("Files found: %d", length(fnames)))
fnames <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
fnames <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
fnames <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
datapath <- "C:\\Bob\\Data\\acllmdb\\aclImdb\\train\\pos"
fnames <- list.files(datapath)
fnames <- grep(".txt", fnames, value="TRUE")
fnames <- sample(fnames, 100)
fnames <- sample(fnames, 100)
fnames
fnames <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
fnames <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
datapath <- "C:\\Bob\\Data\\acllmdb\\aclImdb\\train\\pos"
fnames <- list.files(datapath)
fnames <- grep(".txt", fnames, value="TRUE")
fnames <- sample(fnames, 100)
fnames <- sample(fnames, 100)
fnames
message(sprintf("Files found: %d", length(fnames)))
nameparts <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
nameparts <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
nameparts
nameparts[[1]]
nameparts[[1]][1]
class(nameparts[[1]][1])
nameparts[[1]]
nameparts
nameparts[[1]]
nameparts[[1]][1]
class(nameparts[[1]][1])
nameparts <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
nameparts
unlist(nameparts) # flattens into single dim
nameparts <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
scores <- strsplit(nameparts[1],"_")
scores <- strsplit(nameparts[[1]][1],"_")
scores <- strsplit(nameparts[[1]][1],"_")
scores
scoresplt <- strsplit(nameparts[[1]][1],"_")
scoresplt
scoresplit <- strsplit(nameparts[[1]][1],"_")
scoresplit
nameparts
fnames[[1]][[1]]
fnames[[]][[1]]
fnames[[1]] # [ returns multiple via list or df, [[ return single object of class
nameparts <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
nameparts
scoresplit <- strsplit(nameparts[[1]][1],"_")
scoresplit
nameparts <- nameparts[1]
nameparts
nameparts <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
nameparts
nameparts <- nameparts[1]
nameparts
nameparts <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
nameparts
nameparts <- namepart[[1]]
nameparts <- nameparts[[1]]
nameparts
nameparts <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
# class(nameparts[[1]][1]) == character, also unlist(nameparts) # flattens into single dim
# scoresplit <- strsplit(nameparts[[1]][1],"_")
nameparts <- nameparts[1]
nameparts
nameparts
nameparts <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
nameparts
nameparts[1]
datapath <- "C:\\Bob\\Data\\acllmdb\\aclImdb\\train\\pos"
fnames <- list.files(datapath)
fnames <- grep(".txt", fnames, value="TRUE")
# Sample
fnames <- sample(fnames, 100)
message(sprintf("Files found: %d", length(fnames)))
# []returns list/df [[]]returns single object
# test <- list("one", "two", "three"); test[1]; class(test[1]); test[[1]]; class(test[[1]])
nameparts <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
# class(nameparts[[1]][1]) == character, also unlist(nameparts) # flattens into single dim
# scoresplit <- strsplit(nameparts[[1]][1],"_")
nameparts2 <- nameparts[1]
nameparts2
nameparts
test <- list("one", "two", "three"); test[1]; class(test[1]); test[[1]]; class(test[[1]])
test[c(1,3)]
nameparts2 <- nameparts[1, length(nameparts)]
nameparts2 <- nameparts[1:5]
nameparts2
nameparts2 <- nameparts[1:]
nameparts2 <- nameparts[1:length(nameparts)]
nameparts2
nameparts2 <- nameparts[1:]
nameparts2 <- nameparts[]
nameparts2
nameparts2 <- nameparts[][[1]]
nameparts2
nameparts2 <- nameparts[1:length(nameparts)]
nameparts2
nameparts2 <- nameparts[]
nameparts2
nameparts2 <- nameparts[][[1]]
nameparts2
nameparts2 <- nameparts[[1]][]
nameparts2
nameparts
nameparts2
nameparts2 <- nameparts[1:length(nameparts)]
nameparts2
nameparts2 <- nameparts[1:length(nameparts)][[1]]
nameparts2
nameparts
nameparts
class(nameparts)
str(nameparts)
class(nameparts[[1]])
nameparts[[1]]
class(nameparts[[1]])
substr(nameparts[[1]], start=2, stop=4)
class(nameparts[[1]])
class(nameparts[1])
class(nameparts[[1]])
class(nameparts[[1]])
substr(nameparts[[1]], start=2, stop=4)
class(nameparts[[1]])
legth(nameparts[[1]])
substr(nameparts[[1]], start=2, stop=4)
nameparts[[1]]
class(nameparts[[1]])
length(nameparts[[1]])
substr(nameparts[[1]], start=2, stop=4)
nameparts[[1]][[1]]
nameparts[][[1]][[1]]
strsplit(fnames,"[.]")
strsplit(fnames,"[.]")[[1]]
strsplit(fnames,"[.]")[][[1]]
strsplit(fnames,"[.]")[1:5][[1]]
nameparts
nameparts[1]
print(nameparts[1])
nameparts <- strsplit(fnames,"[.]")  #[1] "7835_9" "txt"
class(nameparts)
nameparts[[1]]
class(nameparts[[1]])
length(nameparts[[1]])
substr(nameparts[[1]], start=2, stop=4)
class(nameparts[[1]])
typeof(nameparts[[1]])
str(x)
x <- list("a" = 2.5, "b" = TRUE, "c" = 1:3)
str(x)
rm(x)
xt <- list("a" = 2.5, "b" = TRUE, "c" = 1:3)
str(xt)
x <- list(2.5, TRUE, 1:3)
str(x)
xt
x
x
str(xt)
typeof(xt)
length(xt)
dice <- c(20, 28, 12, 32, 22, 36)
chisq.test(dice)
class(c(1, 3.4, *+8))
class(c(1, 3.4, 2+8))
class(c("a", "hi", "there"))
class(c(TRUE, "Hi", 2.3))
a <- c(7, 15,20)
b <- c(10, 14, 21)
a+b
a <- c(7, 15,20)
b <- c(10, 14, 21)
a+b; a*b
a+b; a*b; a^2+b
a[2]
a[c(1,3)]
a+b # 17 29 41
a*b # 70 210 420
a^2+b #  59 239 421
a[2] # 15
a[c(1,3)] # 7 20
a[1:2]
shoe_sizes <-c(38, 40, 36, 42, 36, 40, 41)
factor_sizes <- factor(shoe_sizes)
factor_sizes
nlevels(factor_sizes)
x
xt[-1]
xt
sapply(x, function(x) x[1.1])
xt <- list("a" = 2.5, "b" = TRUE, "c" = 10:13)
str(xt)
typeof(xt)
length(xt)
xt
xt[-1]
sapply(x, function(x) x[1.1])
sapply(xt, function(x) x[1.1])
sapply(xt, function(x) x[1,1])
sapply(xt, function(x) x[1.1])
sapply(xt, function(x) x[1])  #!! .
sapply(xt, function(x) x[[1]])
typeof(sapply(xt, function(x) x[1]))
typeof(sapply(xt, function(x) x[[1]]))
sapply(xt, function(x) x[1])
typeof(sapply(xt, function(x) x[[1]]))
sapply(xt, function(x) x[1]) #    a 2.5    b 1.0   c 10.0   "double"
sapply(xt, "[", 1, 1)
sapply(xt, "[", 1)
lapply(xt, "[", 1) # !!
lapply(xt, "[", 1) # !!
lapply(xt, FUN = length)
lapply(xt, fun = length)
lapply(xt, length)
sapply(xt, sum)
lapply(xt, length)
sapply(xt, sum)
sapply(xt, lenth) #
sapply(xt, length) #
lapply(xt, length)
lapply(xt, length)
sapply(xt, length)
class(lapply(xt, length)) # 1 1 4
class(sapply(xt, length))
a[-2]
a[c(T, F, T)]
xt["b"]
xt["b"]
xt[c("b","c")]
sapply(xt, function(x) x[1]) #    a 2.5    b 1.0   c 10.0   "double"
typeof(xt[1])
typeof(xt[[1]) #list
typeof(xt[[1]]) #list
xt[c("b","c")]
xt$b
xt$c
xt$c[[3]]
